<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
		PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
		"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<!--数据库驱动 -->
<!--	 <classPathEntry location="mysql-connector-java-5.1.39-bin.jar"/>-->

	<context id="DB2Tables" targetRuntime="MyBatis3">
		<!-- 为模型生成序列化方法-->
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
		<!-- 为生成的Java模型创建一个toString方法 -->
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
		<commentGenerator type="com.god.autogeneration.autocreate.CommentGenerator">
			<!-- 是否禁止显示日期 true：是 false:否 -->
			<property name="suppressDate" value="true"/>
			<!-- 是否去除注释 -->
			<property name="suppressAllComments" value="true" />
			<property name="javaFileEncoding" value="UTF-8"/>
			<!--是否添加字段注释 true:是 false：否-->
			<property name="addRemarkComments" value="true"/>
		</commentGenerator>
		<!--数据库链接地址账号密码 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
						connectionURL="jdbc:mysql://localhost:3306/test?serverTimezone=UTC&amp;useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8"
						userId="root"
						password="parcelx@123">
		</jdbcConnection>
		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL
			和 NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>
		<!--生成实体类存放位置 -->
		<javaModelGenerator targetPackage="com.god.domain"
							targetProject="AutoGeneration/src/main/java">

			<!-- 是否对model添加 构造函数 -->
			<property name="constructorBased" value="true"/>

			<!-- 是否允许子包，即targetPackage.schemaName.tableName -->
			<property name="enableSubPackages" value="false"/>

			<!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
			<property name="immutable" value="true"/>

			<!-- 给Model添加一个父类 -->
<!--			<property name="rootClass" value="com.god.Hello"/>-->

			<!-- 是否对类CHAR类型的列的数据进行trim操作 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->

		<!--生成映射文件存放位置 -->
		<sqlMapGenerator targetPackage="com.god.mapping"
						 targetProject="AutoGeneration/src/main/java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		<!--生成Dao类存放位置 -->
		<javaClientGenerator type="XMLMAPPER"
							 targetPackage="com.god.dao"
							 targetProject="AutoGeneration/src/main/java">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!--生成对应表及类名 --><!--生成全部表tableName设为%-->
		<!-- tableName:要生成的表名 domainObjectName:生成后的实例名 enableCountByExample:Count语句中加入where条件查询，默认为true开启
			enableUpdateByExample:Update语句中加入where条件查询，默认为true开启 enableDeleteByExample:Delete语句中加入where条件查询，默认为true开启
			enableSelectByExample:Select多条语句中加入where条件查询，默认为true开启 selectByExampleQueryId:Select单个对象语句中加入where条件查询，默认为true开启 -->
		<table tableName="sys_user" domainObjectName="User"
			   enableCountByExample="false" enableUpdateByExample="false"
			   enableDeleteByExample="false" enableSelectByExample="false"
			   selectByExampleQueryId="false"></table>
	</context>
</generatorConfiguration>